import "./styles.css";
import WalletProvider from "./common/Provider";
import ConnectMultiButton from "./components/ConnectMultiButton";
import Notification from "./components/Notification";
import PayButton from "./components/PayButton";
export declare const ConnectButton: typeof ConnectMultiButton;
import { useWalletAddress, useXverseSign, useUnisatSign, useLeatherSign, useSignTx, useMessageSign, useDisconnect, usePayBTC, useWalletConnect, useWalletBalance, useWalletSigning, useBitcoinPrice, useNetwork } from "./hooks";
export { WalletProvider };
export { ConnectMultiButton, Notification, PayButton };
export { addNotification, removeNotification } from "./stores/reducers/notificationReducers";
export declare function bytesToBase64(bytes: any): string;
export { DevToolsUtils, setupDevTools, useDevTools } from "./utils/devtools";
export { BWAError, BWAErrorCode, BWAErrorSeverity, bwaErrorManager, throwBWAError, wrapAndThrowError, withErrorHandling, errorManager } from "./utils/errorHandler";
export type { BWAErrorContext, BWAErrorOptions, ErrorHandler } from "./utils/errorHandler";
export { useErrorHandler, useWalletErrors, useTransactionErrors, useCriticalErrors } from "./hooks/useErrorHandler";
export type { UseErrorHandlerOptions, UseErrorHandlerReturn } from "./hooks/useErrorHandler";
export type { RootState, AppDispatch, BWAStore } from "./stores";
export { useWalletAddress, useXverseSign, useUnisatSign, useLeatherSign, useSignTx, useMessageSign, useDisconnect, usePayBTC, useWalletConnect, useWalletBalance, useWalletSigning, useBitcoinPrice, useNetwork, };
export { fetchBitcoinPrice, getCachedBitcoinPrice, setAutoRefresh, clearError, clearPriceData, } from "./stores/reducers/bitcoinPriceReducer";
export type { BitcoinPriceData, BitcoinPriceResponse, PriceSourceError, UseBitcoinPriceReturn, } from "./hooks/useBitcoinPrice";
export type { Network } from "./hooks";
